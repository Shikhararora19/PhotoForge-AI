{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shikhararora/Downloads/PhotoForge-AI/src/components/authentication/LoginForm.tsx"],"sourcesContent":["\"use client\"\nimport React from 'react'\nimport { z } from \"zod\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\n\nconst formSchema = z.object({\n    email: z.string().email({\n        message: \"Invalid email address\",\n    }),\n    password: z.string().min(8, {\n        message: \"Password must be at least 8 characters\",\n    }),\n  })\n\nconst LoginForm = () => {\n    const form = useForm<z.infer<typeof formSchema>>({\n        resolver: zodResolver(formSchema),\n        defaultValues: {\n          email: \"\",\n          password: \"\",\n        },\n      })\n\n      function onSubmit(values: z.infer<typeof formSchema>) {\n        // Do something with the form values.\n        // âœ… This will be type-safe and validated.\n        console.log(values)\n        }\n     \n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Username</FormLabel>\n              <FormControl>\n                <Input placeholder=\"shadcn\" {...field} />\n              </FormControl>\n              <FormDescription>\n                This is your public display name.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n\nexport default LoginForm"],"names":[],"mappings":";;;;AAGA;AAEA;AACA;AASA;AAbA;AAEA;;;AAJA;;;;;;;AAiBA,MAAM,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,SAAS;IACb;IACA,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QACxB,SAAS;IACb;AACF;AAEF,MAAM,YAAY;;IACd,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAA8B;QAC7C,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,OAAO;YACP,UAAU;QACZ;IACF;IAEA,SAAS,SAAS,MAAkC;QAClD,qCAAqC;QACrC,0CAA0C;QAC1C,QAAQ,GAAG,CAAC;IACZ;IAEN,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,6LAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAW,WAAU;;8BACrD,6LAAC,mIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;8CACP,6LAAC,mIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6LAAC,mIAAA,CAAA,cAAW;8CACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;wCAAC,aAAY;wCAAU,GAAG,KAAK;;;;;;;;;;;8CAEvC,6LAAC,mIAAA,CAAA,kBAAe;8CAAC;;;;;;8CAGjB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,6LAAC,qIAAA,CAAA,SAAM;oBAAC,MAAK;8BAAS;;;;;;;;;;;;;;;;;AAI9B;GAtCM;;QACW,iKAAA,CAAA,UAAO;;;KADlB;uCAwCS"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///Users/shikhararora/Downloads/PhotoForge-AI/src/components/authentication/AuthForm.tsx"],"sourcesContent":["'use client'\nimport React, { useState } from 'react'\nimport LoginForm from './LoginForm'\n\nconst AuthForm = () => {\n  const [mode, setMode] = useState('login')\n  return (\n    <div className='space-y-6'>\n      <div className='flex flex-col space-y-2 text-center'>\n        <h1 className='text-2xl font-semibold tracking-tight'>{\n          mode === 'reset'  ? \"Reset Password\" : mode === 'login' ? \"Login\" : \"Sign Up\"\n        }\n        </h1>\n        <p className='text-sm text-muted-foreground'>{\n          mode === 'reset'  ? \"Enter your email below to reset your password\" : mode === 'login' ? \"Enter your email below to login\" : \n          \"Enter your information below to create an account\"\n        }\n        </p>\n      </div>\n        {\n          mode === 'login' && (<LoginForm />)\n        }\n        {\n          mode === 'signup' && (<span>SignUp Form</span>)\n        }\n        {   \n          mode === 'reset' && (<span>Reset password form</span>)\n        }\n\n    </div>\n  )\n}\n\nexport default AuthForm"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAIA,MAAM,WAAW;;IACf,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCACZ,SAAS,UAAW,mBAAmB,SAAS,UAAU,UAAU;;;;;;kCAGtE,6LAAC;wBAAE,WAAU;kCACX,SAAS,UAAW,kDAAkD,SAAS,UAAU,oCACzF;;;;;;;;;;;;YAKA,SAAS,yBAAY,6LAAC,oJAAA,CAAA,UAAS;;;;;YAG/B,SAAS,0BAAa,6LAAC;0BAAK;;;;;;YAG5B,SAAS,yBAAY,6LAAC;0BAAK;;;;;;;;;;;;AAKrC;GA3BM;KAAA;uCA6BS"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}